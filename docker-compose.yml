version: '3.5'

networks:
  tairai:
    driver: overlay
    external: true

services:
  ### APP (PHP-FPM + CADDY) ##############################################
  app:
    container_name: ${COMPOSE_PROJECT_NAME}_app_local
    build:
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PHP_FPM_INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - PHP_FPM_INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      context: .
      dockerfile: docker/app/Dockerfile_local
    image: registry.gitlab.com/flagstudio/${COMPOSE_PROJECT_NAME}:latest
    volumes:
      - ./:/var/www
    networks:
      - ${COMPOSE_PROJECT_NAME}
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      #http
      - traefik.http.services.${COMPOSE_PROJECT_NAME}-app-service.loadbalancer.server.port=${APP_PORT}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.rule=Host(`${APP_URI}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.entrypoints=http
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-app-router.service=${COMPOSE_PROJECT_NAME}-app-service

  ### TRAEFIK (Edge Reverse Proxy) ##############################################
  traefik:
    image: traefik:v2.5.6
    container_name: ${COMPOSE_PROJECT_NAME}_traefik
    security_opt:
      - no-new-privileges:true
    ports:
      - ${TRAEFIK_WEB_PORT}:80
      - ${TRAEFIK_SECURE_WEB_PORT}:443
      - ${TRAEFIK_PORT}:8080
    command:
      - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:${TRAEFIK_WEB_PORT}
      - --entrypoints.https.address=:${TRAEFIK_SECURE_WEB_PORT}
      - --entrypoints.dashboard.address=:${TRAEFIK_PORT}

      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.email=info@${APP_URI}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=http
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/traefik/letsencrypt:/letsencrypt
    networks:
      - ${COMPOSE_PROJECT_NAME}
    labels:
      - traefik.enable=true
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}

      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

      - traefik.http.routers.traefik-public-http.rule=Host(`${TRAEFIK_URI}`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.services.traefik-public.loadbalancer.server.port=${TRAEFIK_PORT}
    restart: unless-stopped

  ### PostgreSQL ###########################################
  postgres:
    image: postgres:13-alpine
    command: postgres
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data:delegated
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:5432
    networks:
      - ${COMPOSE_PROJECT_NAME}
